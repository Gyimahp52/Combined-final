const lazyObserver = new IntersectionObserver(
    (entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const element = entry.target;
  
          // Handle images
          if (element.tagName === "IMG") {
            element.src = element.dataset.src; // Set the actual source
            element.onload = () => element.classList.add("loaded"); // Add loaded class when loaded
          }
  
          // Handle videos
          if (element.tagName === "VIDEO") {
            element.src = element.dataset.src; // Set the actual source
            element.load(); // Load the video
            element.classList.add("loaded");
          }
  
          // Unobserve the element once loaded
          observer.unobserve(element);
        }
      });
    },
    { rootMargin: "100px", threshold: 0.25 } // Trigger loading earlier when elements are within 100px
  );
  
  // Attach observer to lazy-media elements
  document.addEventListener("DOMContentLoaded", () => {
    const lazyElements = document.querySelectorAll(".lazy-media");
    lazyElements.forEach((element) => lazyObserver.observe(element));
  });
  